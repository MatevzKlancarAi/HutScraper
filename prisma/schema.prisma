generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model available_dates {
  id           BigInt     @id @default(autoincrement())
  property_id  Int
  room_type_id Int
  date         DateTime   @db.Date
  can_checkin  Boolean    @default(false)
  can_checkout Boolean    @default(false)
  scraped_at   DateTime?  @default(now()) @db.Timestamptz(6)
  properties   properties @relation(fields: [property_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  room_types   room_types @relation(fields: [room_type_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([property_id, room_type_id, date], map: "unique_available_room_date")
  @@index([property_id, date], map: "idx_available_dates_property_date")
}

model properties {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  slug            String            @unique @db.VarChar(100)
  location        Json?
  booking_system  String?           @db.VarChar(50)
  is_active       Boolean?          @default(true)
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?         @db.Timestamptz(6)
  available_dates available_dates[]
  room_types      room_types[]
}

model room_types {
  id              Int               @id @default(autoincrement())
  property_id     Int
  external_id     String?           @db.VarChar(100)
  name            String            @db.VarChar(255)
  capacity        Int
  quantity        Int               @default(1)
  bed_type        String?           @db.VarChar(100)
  room_category   String?           @db.VarChar(50)
  features        String[]
  is_active       Boolean?          @default(true)
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at      DateTime?         @db.Timestamptz(6)
  available_dates available_dates[]
  properties      properties        @relation(fields: [property_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
